I"ò<p>A walktrough the steps I executed to set up my server on <a href="https://www.linode.com/" rel="noopener" target="_blank">Linode</a>.</p>

<p><br />
<br /></p>

<h2 id="references-and-resources">References and resources</h2>

<ul>
  <li>Create <a href="https://www.linode.com/docs/getting-started/" rel="noopener" target="_blank">a new Linode</a></li>
  <li>Harden <a href="https://en.wikipedia.org/wiki/Secure_Shell" rel="noopener" target="_blank">SSH</a> access and <a href="https://www.linode.com/docs/security/securing-your-server/" rel="noopener" target="_blank">secure the server</a></li>
</ul>

<h2 id="configuration">CONFIGURATION</h2>

<p>update Ubuntu</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt update -y &amp;&amp; sudo apt upgrade -y
</code></pre></div></div>

<p><code class="highlighter-rouge">-y</code> parameter is used to accept by default any question</p>

<p><br /></p>

<p>remove debris</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt autoremove
</code></pre></div></div>

<p><br /></p>

<p>add a limited user</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adduser tommi
</code></pre></div></div>

<p><br /></p>

<p>give that user sudo permissions</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adduser tommi sudo
</code></pre></div></div>

<p><br /></p>

<p>install zsh</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt install zsh
</code></pre></div></div>

<p><br /></p>

<p>set zsh as default shell</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chsh -s /usr/bin/zsh root
</code></pre></div></div>

<p><br /></p>

<p>install zsh syntax highlighting</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt install zsh-syntax-highlighting
</code></pre></div></div>

<p><br /></p>

<p>install git</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt install git
</code></pre></div></div>

<p><br /></p>

<p>install oh-my-zsh</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
</code></pre></div></div>

<p><br /></p>

<p>enable zsh syntax highlighting</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>echo "source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" &gt;&gt; ~/.zshrc
</code></pre></div></div>

<p><br />
<br /></p>

<h2 id="install-docker">INSTALL DOCKER</h2>

<p>installing</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh get-docker.sh
</code></pre></div></div>

<p><br /></p>

<p>allow Docker to run as a root from this user</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo usermod -aG docker
</code></pre></div></div>

<p><br /></p>

<p>enable Docker to start on boot</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo systemctl enable docker tommi
</code></pre></div></div>

<p><br />
<br /></p>

<h2 id="installing-docker-compose">INSTALLING DOCKER COMPOSE</h2>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo curl -L "https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
</code></pre></div></div>

<p><br /></p>

<p>to enable bash completion, insert in <code class="highlighter-rouge">~/.zshrc</code></p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>plugins=(... docker docker-compose
)
</code></pre></div></div>

<p><br /></p>

<h3 id="getting-started---docker-compose"><a href="https://docs.docker.com/compose/gettingstarted/">GETTING STARTED - DOCKER COMPOSE</a></h3>

<p><br />
<br /></p>

<h2 id="lazydocker">LazyDocker</h2>

<p>Install <a href="https://github.com/jesseduffield/lazydocker" rel="noopener" target="_blank">Lazydocker</a> to interact easily with Docker. Since itâ€™s written in Go, installation of the language is needed.</p>

<p><br /></p>

<p>download Go</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget -c https://dl.google.com/go/go1.14.3.linux-amd64.tar.gz
</code></pre></div></div>

<p><br /></p>

<p>extract archive</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo tar -C /usr/local -xvzf go1.14.3.linux-amd64.tar.gz
</code></pre></div></div>

<p><br /></p>

<p>install Go</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>export PATH=$PATH:/usr/local/go/bin
</code></pre></div></div>

<p><a href="https://github.com/jesseduffield/lazydocker#installation" rel="noopener" target="_blank">install and run Lazydocker</a></p>

<p><br />
<br /></p>

<h2 id="installing-linodes-lamp"><a href="https://www.linode.com/docs/applications/containers/how-to-install-docker-and-deploy-a-lamp-stack/">INSTALLING LINODEâ€™S <code class="highlighter-rouge">LAMP</code></a></h2>

<p>Search for linode user images:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo docker search linode
</code></pre></div></div>

<p><br /></p>

<p>Download the linode/lamp image:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo docker pull linode/lamp
</code></pre></div></div>

<p><br /></p>

<p>Run, create, or turn on a new container and forward port 80:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo docker run -p 80:80 -t -i linode/lamp /bin/bash
</code></pre></div></div>

<p><br /></p>

<p>As the containerâ€™s root user, start Apache:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ service apache2 start
</code></pre></div></div>

<p><br /></p>

<p>Start MySQL:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ service mysql start
</code></pre></div></div>

<p><br /></p>

<p>Exit the container while leaving it running by pressing <code class="highlighter-rouge">ctrl + p</code> then <code class="highlighter-rouge">ctrl + q</code>.</p>

<p>Enter the IP address in a web browser to test the site.</p>

<blockquote>
  <p>The websiteâ€™s root directory is <code class="highlighter-rouge">/var/www/example.com/public_html/</code>.</p>
</blockquote>

<p><br />
<br /></p>

<h2 id="optimize-apache-for-linode-1gb">OPTIMIZE APACHE FOR LINODE 1GB</h2>

<p>Make a copy of Apacheâ€™s configuration file. You can restore the duplicate (apache2.backup.conf) if anything happens to the configuration file:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo cp /etc/apache2/apache2.conf /etc/apache2/apache2.backup.conf
</code></pre></div></div>

<p><br /></p>

<p>Open Apacheâ€™s configuration file for editing:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo vim /etc/apache2/apache2.conf
</code></pre></div></div>

<p><br /></p>

<p>add this at the end of the file</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>KeepAlive Off

   ...

   &lt;IfModule mpm_prefork_module&gt;
       StartServers 4
       MinSpareServers 20
       MaxSpareServers 40
       MaxClients 200
       MaxRequestsPerChild 4500
   &lt;/IfModule&gt;
</code></pre></div></div>

<p><br /></p>

<p>Restart Apache to incorporate the new settings:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo systemctl restart apache2
</code></pre></div></div>

<h3 id="configure-name-based-virtual-hosts"><a href="https://www.linode.com/docs/websites/hosting-a-website-ubuntu-18-04/#configure-name-based-virtual-hosts">Configure Name-based Virtual Hosts</a></h3>

:ET